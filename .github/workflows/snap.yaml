name: snap
on:
  push:
    branches:
      - confined
  pull_request:
    branches:
      - confined
  workflow_dispatch:
  workflow_call:

jobs:
  confined-snap:
    uses: ubuntu-robotics/snap_workflows/.github/workflows/build-install-test-snap.yaml@F_add_option_install_args
    with:
      branch-name: confined
      snap-name: ros2-talker-listener
      snap-install-args: --dangerous
      test-script: |
                    #!/bin/bash

                    ### test snap connections are available in confined snap
                    snap connections ros2-talker-listener | grep -E "ros2-talker-listener:network|ros2-talker-listener:network-bind"
                    if [ $? -eq 0 ]; then
                        echo "connections are available"
                    else
                        echo "Error - connections are not available."
                        exit 1
                    fi

                    ### test ros2-talker-listener snap executes correctly
                    sudo snap install ros2-cli --channel=foxy/beta
                    wait

                    check_node() {
                        local node_name=$1
                        ros2-cli.ros2 node list | grep -q "/$node_name"
                        if [ $? -eq 0 ]; then
                            echo "$node_name is running."
                        else
                            echo "Error - $node_name is not running."
                            exit 1
                        fi
                    }
                    check_topic() {
                        local topic_name=$1
                        local pub_count=$(ros2-cli.ros2 topic info /$topic_name | grep "Publisher count:" | awk '{print $3}')
                        local sub_count=$(ros2-cli.ros2 topic info /$topic_name | grep "Subscription count:" | awk '{print $3}')
                        if [ "$pub_count" -gt 0 ] && [ "$sub_count" -gt 0 ]; then
                            echo "$topic_name has publishers and subscribers."
                        else
                            echo "Error - $topic_name has no publishers or subscribers."
                            exit 1
                        fi
                    }

                    ros2-talker-listener &
                    pid=$!
                    check_node talker
                    check_node listener
                    check_topic chatter
                    kill $pid

                    echo "All checks passed successfully."
